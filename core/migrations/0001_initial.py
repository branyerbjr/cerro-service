# Generated by Django 5.2.5 on 2025-08-20 22:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemSetup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_completed', models.BooleanField(default=False, verbose_name='Setup Completado')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Completado')),
                ('note', models.TextField(blank=True, verbose_name='Notas del Setup')),
            ],
            options={
                'verbose_name': 'Configuración del Sistema',
                'verbose_name_plural': 'Configuración del Sistema',
                'db_table': 'system_setup',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nombre de la Empresa')),
                ('ruc', models.CharField(blank=True, max_length=32, verbose_name='RUC')),
                ('address', models.TextField(blank=True, verbose_name='Dirección')),
                ('phone', models.CharField(blank=True, max_length=32, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('active', models.BooleanField(default=True, verbose_name='Activa')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
                'db_table': 'companies',
                'indexes': [models.Index(fields=['name'], name='companies_name_c7a1b3_idx'), models.Index(fields=['email'], name='companies_email_6c1508_idx')],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=100, verbose_name='Cargo')),
                ('department', models.CharField(blank=True, max_length=100, verbose_name='Departamento')),
                ('location', models.CharField(blank=True, max_length=100, verbose_name='Ubicación')),
                ('sap_id', models.CharField(blank=True, max_length=50, verbose_name='ID SAP')),
                ('employee_number', models.CharField(blank=True, max_length=50, verbose_name='Número de Empleado')),
                ('must_change_password', models.BooleanField(default=False, verbose_name='Debe Cambiar Contraseña')),
                ('can_access', models.BooleanField(default=False, verbose_name='Puede Acceder al Sistema')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(choices=[('admin', 'Administrador'), ('user', 'Usuario'), ('technician', 'Técnico')], max_length=50, verbose_name='Clave del Rol')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre del Rol')),
                ('can_access', models.BooleanField(default=True, verbose_name='Puede Acceder')),
                ('is_system', models.BooleanField(default=False, verbose_name='Es Rol del Sistema')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roles',
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.role', verbose_name='Rol')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Rol de Usuario',
                'verbose_name_plural': 'Roles de Usuario',
                'db_table': 'user_roles',
            },
        ),
        migrations.CreateModel(
            name='AuthLoginAudit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('success', models.BooleanField(verbose_name='Login Exitoso')),
                ('ip', models.GenericIPAddressField(verbose_name='Dirección IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Intento')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Auditoría de Login',
                'verbose_name_plural': 'Auditoría de Logins',
                'db_table': 'auth_login_audit',
                'indexes': [models.Index(fields=['user'], name='auth_login__user_id_b2ee9f_idx'), models.Index(fields=['success'], name='auth_login__success_4c2612_idx'), models.Index(fields=['created_at'], name='auth_login__created_155fbc_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_email_4b85f2_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['company'], name='users_company_c76839_idx'),
        ),
        migrations.AddIndex(
            model_name='role',
            index=models.Index(fields=['company', 'key'], name='roles_company_72b2b3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='role',
            unique_together={('company', 'key')},
        ),
        migrations.AlterUniqueTogether(
            name='userrole',
            unique_together={('user', 'role')},
        ),
    ]
